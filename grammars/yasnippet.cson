name: "YASnippet"
scopeName: "source.yasnippet"
fileTypes: [
	"yasnippet"
	"yas"
]
firstLineMatch: """(?xi)
	# Emacs modeline
	-\\*-(?:\\s*(?=[^:;\\s]+\\s*-\\*-)|(?:.*?[;\\s]|(?<=-\\*-))mode\\s*:\\s*)
		(?:yasnippet|snippet)
	(?=[\\s;]|(?<![-*])-\\*-).*?-\\*-
"""

patterns: [include: "#main"]

repository:
	main:
		patterns: [
			{include: "#prologue"}
			{include: "#body"}
		]
		
	prologue:
		name: "meta.prologue.yasnippet"
		begin: "\\A"
		end:   "^(?=\\s*#+\\s*--\\s*$)"
		patterns: [{
			begin: "^\\s*(#+)(?!\\s*--\\s*$)"
			end:   "$"
			beginCaptures:
				1: name: "punctuation.definition.comment.number-sign.yasnippet"
			patterns: [{
				begin: "(?=-\\*-)"
				end:   "$"
				contentName: "comment.line.modeline.yasnippet"
				patterns: [include: "source.emacs.lisp#modeline"]
			}, include: "#directives"]
		}]
	
	directives:
		patterns: [{
			# Simple keys
			name:  "meta.directive.snippet-$1.yasnippet"
			match: "(?<=[\\s#])(key|name|group|uuid|contributor)\\s*(:)(?:\\s*(\\S.*))?"
			captures:
				1: name: "variable.assignment.$1.yasnippet"
				2: name: "punctuation.separator.dictionary.key-value.colon.yasnippet"
				3: name: "string.unquoted.yasnippet"
		},{
			# Keys which involve embedded lines of Lisp
			name: "meta.directive.snippet-$1.yasnippet"
			match: "(?<=[\\s#])(condition|expand-env)\\s*(:)(?:\\s*(\\S.*))?"
			captures:
				1: name: "variable.assignment.$1.yasnippet"
				2: name: "punctuation.separator.dictionary.key-value.colon.yasnippet"
				3: name: "source.embedded.emacs.lisp", patterns: [include: "source.emacs.lisp"]
		},{
			# Direct keybinding
			name: "meta.directive.keybinding.yasnippet"
			match: "(?<=[\\s#])(binding)\\s*(:)(?:\\s*(\\S.*))?"
			captures:
				1: name: "variable.assignment.$1.yasnippet"
				2: name: "punctuation.separator.dictionary.key-value.colon.yasnippet"
				3: patterns: [include: "source.emacs.lisp#key-notation"]
		}]

	
	body:
		name:  "meta.snippet-body.yasnippet"
		begin: "^\\s*(#+)\\s*(--)\\s*$\\n?"
		end:   "(?=A)B"
		beginCaptures:
			0: name: "comment.line.number-sign.yasnippet"
			1: name: "punctuation.definition.comment.number-sign.yasnippet"
			2: name: "punctuation.terminator.double-dash.yasnippet"
		patterns: [
			{include: "#tab-stops"}
			{include: "#escaped-character"}
			{include: "#embedded-lisp"}
		]
		
	"tab-stops":
		name: "variable.other.positional.$2-nth.tab-stop.yasnippet"
		match: "(\\$)([0-9]+)"
		captures:
			1: name: "punctuation.definition.variable.sigil.dollar-sign.yasnippet"

	"escaped-character":
		match: "(\\\\)."
		name: "constant.character.escape.backslash.yasnippet"
		captures:
			1: name: "punctuation.definition.escape.yasnippet"

	"embedded-lisp":
		name:  "string.interpolated.yasnippet"
		begin: "`"
		end:   "`"
		contentName: "source.embedded.emacs.lisp"
		patterns: [include: "source.emacs.lisp"]
		beginCaptures: 0: name: "punctuation.section.begin.embedded.yasnippet"
		endCaptures:   0: name: "punctuation.section.end.embedded.yasnippet"
